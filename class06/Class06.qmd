---
title: "Class06: Functions in R"
author: "Wanning Cui"
format: pdf
---

```{r}
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

Let's start slow and find the average for student1
```{r}
mean(student1)
```
How can we drop the lowest score? I can use the `min()` function to find the lowest score (element in the vector).
```{r}
min(student1)
```
I found the function `which.min()` 
```{r}
student1
which.min(student1)
```
```{r}
student1[-8]
```
Let's put the use of `which.min()`, minus indexing and `mean()` together.
```{r}
mean(student1[-which.min(student1)])
```
```{r}
mean(student2[-which.min(student1)])
```
```{r}
x <- student2
mean(x[-which.min(x)])
```
```{r}
mean(x, na.rm=TRUE)
```
```{r}
student3
```
We can "mask" the NA or change them to be zero. The rational here is if you don't do a hw you get zero points. 

We can use the `is.na()` function to find where the missing homeworks are in the input vector.

```{r}
student2
is.na(student2)
```
```{r}
x[is.na(x)] <- 0
x
```
```{r}
x<-student3
#Mask NA to zero
x[is.na(x)] <- 0
#Find the mean dropping 
mean(x[-which.min(x)])
```
Turn this snippet into a function
```{r}
grade <- function(x) {
  #Mask NA to zero
  x[is.na(x)] <- 0
  #Find the mean dropping 
  mean(x[-which.min(x)])
}
```

We can use this function now to grade any student
```{r}
grade(student1)
```

>Question 1

```{r}
gradebook <- read.csv("https://tinyurl.com/gradeinput", 
                      row.names=1)
gradebook
```
A very useful function called `apply()` helps take our new `grade()` function and apply it over the full gradebook.
```{r}
apply(gradebook, 1, grade)
```
```{r}
ans <- apply(gradebook, 1, grade)
ans
```

> Question 2: Using your grade() function and the supplied gradebook, Who is the top scoring student overall in the gradebook? [3pts]

```{r}
which.max(ans)
```
> Question 3: From your analysis of the gradebook, which homework was toughest on students (i.e. obtained the lowest scores overall? [2pts]

We are going to use the `apply()` function again
```{r}
which.min(apply(gradebook, 2, mean, na.rm=TRUE))
```
Let's mask the NA values to zero
```{r}
mask <- gradebook
mask [is.na(mask)] <- 0
mask
```
```{r}
which.min(apply(mask,2,mean))
```
```{r}
which.min(apply(mask,2,sum))
```
>Question4: From your analysis of the gradebook, which homework was most predictive of overall score (i.e. highest correlation with average grade score)?

```{r}
cor(mask$hw5, ans)
```

Now take the `apply()` function and `cor()`function and run over our whole gradebook
```{r}
apply(mask,2,cor,y=ans)
```





